<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.rsmu</groupId>
    <artifactId>tempoLW</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <logging.version>1.6.1</logging.version>
        <tapestry-release-version>5.4.3</tapestry-release-version>
        <servlet-api-release-version>2.5</servlet-api-release-version>
        <testng-release-version>6.8.21</testng-release-version>
        <slf4j-release-version>1.7.19</slf4j-release-version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <hibernate.version>4.2.2.Final</hibernate.version>
        <mysql.version>5.1.32</mysql.version>
        <spring-release-version>2.0.8</spring-release-version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.jtds</groupId>
            <artifactId>jtds</artifactId>
            <version>1.3.1</version>
        </dependency>


        <!-- To set up an application with a database, change the artifactId below to
              tapestry-hibernate, and add a dependency on your JDBC driver. You'll also
              need to add Hibernate configuration files, such as hibernate.cfg.xml. -->
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-core</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>

        <!-- Include the Log4j implementation for the SLF4J logging framework -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j-release-version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-webresources</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>

        <!-- Uncomment this to add support for file uploads: -->
         <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-upload</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-hibernate</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>

        <!--<dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-spring</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>-->

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.0.2.GA</version>  <!-- 5.0.1.Final -->
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-beanvalidator</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>

        <!--<dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>-->

        <!--<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-dao</artifactId>
            <version>${spring-release-version}</version>
        </dependency>-->

        <!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests)
will fail, preventing Maven from packaging the WAR. Tapestry includes a large number
of testing facilities designed for use with TestNG (http://testng.org/), so it's recommended. -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng-release-version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-test</artifactId>
            <version>${tapestry-release-version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Provided by the servlet container, but sometimes referenced in the application
       code. -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api-release-version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Provide dependency to the Tapestry javadoc taglet which replaces the Maven component report -->
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-javadoc</artifactId>
            <version>${tapestry-release-version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>4.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>4.0.0</version>
        </dependency>


        <!-- Integration with Apache Shiro -->
        <dependency>
            <groupId>org.tynamo</groupId>
            <artifactId>tapestry-security</artifactId>
            <version>0.7.1</version>
        </dependency>

<!--
        library incompatible with recent Hibernate. Classes were copied into the project and fixed
        <dependency>
            <groupId>org.tynamo</groupId>
            <artifactId>tapestry-hibernate-seedentity</artifactId>
            <version>0.1.3</version>
        </dependency>
-->
    </dependencies>

    <build>
        <finalName>tempoLW</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <optimize>true</optimize>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

<!-- spring security is not used
    <repositories>
        <repository>
            <id>localhost.nu</id>
            <url>http://www.localhost.nu/java/mvn</url>
        </repository>
    </repositories>
-->

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <hibernate.connection.driver_class>com.mysql.jdbc.Driver</hibernate.connection.driver_class>
                <hibernate.connection.url>jdbc:mysql://127.0.0.1/tempo_db?autoReconnect=true</hibernate.connection.url>
                <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
                <hibernate.default_schema/>
                <hibernate.connection.username>tempo</hibernate.connection.username>
                <hibernate.connection.password>neonka</hibernate.connection.password>
            </properties>
        </profile>

        <profile>
            <id>qa</id>

            <properties>
                <hibernate.connection.driver_class>net.sourceforge.jtds.jdbc.Driver</hibernate.connection.driver_class>
                <hibernate.connection.url>jdbc:jtds:sqlserver://172.18.1.27:1433/tempo_db</hibernate.connection.url>
                <hibernate.dialect>ru.rsmu.tempoLW.hibernate.dialect.UnicodeSQLServerDialect</hibernate.dialect>
                <hibernate.default_schema>dbo</hibernate.default_schema>
                <hibernate.connection.username>tandem</hibernate.connection.username>
                <hibernate.connection.password>123Tandem456</hibernate.connection.password>
            </properties>
        </profile>
    </profiles>
</project>
